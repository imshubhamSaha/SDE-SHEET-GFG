/**
 * @param {number[][]} matrix
 * @param {number} target
 * @return {boolean}
 */

const binary_search = function(i, j, arr, target) {
    let low = i, high = j;

    while(low<=high) {
        let mid = low + Math.floor((high-low)/2);

        if(arr[mid] === target) {
            return true
        }else if(arr[mid] <target) {
            low = mid+1
        }else {
            high = mid-1;
        }
    }

    return false;
}

var searchMatrix = function(matrix, target) {
    const m= matrix.length
    const n= matrix[0].length
    let low = 0;
    let high = m-1;

    while(low <=high){
        let mid = low + Math.floor((high-low)/2);
        if(target>=matrix[mid][0] && target<= matrix[mid][n-1]){
            return binary_search(0, n-1, matrix[mid], target)
        }else if(target<matrix[mid][0]) {
            high = mid-1
        }else {
            low = mid+1
        }
    }

    return false;
};
