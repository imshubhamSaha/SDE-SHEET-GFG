/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    let head = new ListNode();
    let ans = head;

    let temp1 = list1
    let temp2 = list2

    while(temp1 && temp2) {
        if(temp1.val < temp2.val) {
            head.next = new ListNode(temp1.val);
            temp1 = temp1.next;
        }
        else{
            head.next = new ListNode(temp2.val);
            temp2 = temp2.next;
        }

        head = head.next;
    }
    while(temp1 || temp2) {
        if(temp1) {
            head.next = new ListNode(temp1.val)
            temp1 = temp1.next
        }
        if(temp2) {
            head.next = new ListNode(temp2.val)
            temp2 = temp2.next;
        }
        head = head.next
    }
    return ans.next;
};
