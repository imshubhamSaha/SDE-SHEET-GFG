/**
 * @param {number[]} nums
 * @param {number[]} l
 * @param {number[]} r
 * @return {boolean[]}
 */
var checkArithmeticSubarrays = function(nums, l, r) {
    const check = (start, end) => {
        if((end - start) < 1) return false;
        let min = Infinity, max = -Infinity;
        for(let i=start; i<=end; i++){
            min = Math.min(min, nums[i]);
            max = Math.max(max, nums[i]);
        };

        if(min === max) return true;

        if(((max - min) % (end -start)) !== 0) {
            return false;
        };

        const diff = (max-min)/ (end-start);

        const set = new Set();

        for(let i=start; i<=end; i++) {
            if(set.has(nums[i])) {
                return false;
            }

            set.add(nums[i]);
        };

        while(min < max) {
            if(!set.has(min)) {
                return false;
            }
            min += diff;
        };

        return true;
    }
    return l.map((q, i) => check(q, r[i]))
};
